package organizer.client;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.TransformerException;
import org.w3c.dom.Element;

/**
 *
 * @author Ilya
 */
public class AuthorizationForm extends javax.swing.JFrame {

    /**
     * Creates new form Authorization
     *
     * @throws javax.xml.parsers.ParserConfigurationException
     */
    public AuthorizationForm() throws ParserConfigurationException {
        initComponents();
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        builder = factory.newDocumentBuilder();
        document = null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLogin = new javax.swing.JTextField();
        jPassword = new javax.swing.JTextField();
        jAuthorization = new javax.swing.JButton();
        jRegistration = new javax.swing.JButton();
        jError = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Логин");

        jLabel2.setText("Пароль");

        jLabel3.setText("Вход в органайзер");

        jLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLoginMousePressed(evt);
            }
        });

        jPassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPasswordMousePressed(evt);
            }
        });

        jAuthorization.setText("Вход");
        jAuthorization.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAuthorizationActionPerformed(evt);
            }
        });
        jAuthorization.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jAuthorizationKeyPressed(evt);
            }
        });

        jRegistration.setText("Регистрация");
        jRegistration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRegistrationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLogin)
                            .addComponent(jPassword)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jError)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jAuthorization)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jRegistration)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(102, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jError)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRegistration)
                    .addComponent(jAuthorization))
                .addContainerGap(142, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private Socket socket;
    //private Socket socketUpdate;
    private ObjectOutputStream out;
    private ObjectInputStream in;
   // private ObjectInputStream inUpdate;
    private org.w3c.dom.Document document;
    private final DocumentBuilder builder;
    ClientForm clientForm;

    private void resetJError() {
        jError.setText(null);
    }

    private void connectServer() throws IOException {
        int serverPort = 6667;
        //int serverUpdatePort = 6668;
        String address = InetAddress.getLocalHost().getHostAddress();
        InetAddress ipAddress = InetAddress.getByName(address);
        socket = new Socket(ipAddress, serverPort);
        //socketUpdate = new Socket(ipAddress, serverUpdatePort);
        System.out.println("подключился к серверу");
        out = new ObjectOutputStream(socket.getOutputStream());
        in = new ObjectInputStream(socket.getInputStream());
        //inUpdate = new ObjectInputStream(socketUpdate.getInputStream());
    }

    private void Authorization() throws ClassNotFoundException {
        try {
            if (socket == null) {
                connectServer();
            }

            document = builder.newDocument();

            Element rootElement = document.createElement("root");
            document.appendChild(rootElement);

            Element element = document.createElement("task");
            element.setTextContent("authorization");
            rootElement.appendChild(element);

            element = document.createElement("login");
            String text = jLogin.getText();
            element.setTextContent(text);
            rootElement.appendChild(element);

            element = document.createElement("password");
            element.setTextContent(jPassword.getText());
            rootElement.appendChild(element);

            out.writeObject(document);
            out.flush();

            if (!in.readBoolean()) {
                jError.setText("Неверный логин или пароль");
            } else {
                java.awt.EventQueue.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        try {
                            clientForm = new ClientForm(out, in, text);
                            clientForm.setVisible(true);
                        } catch (ParserConfigurationException | IOException | ClassNotFoundException ex) {
                            Logger.getLogger(AuthorizationForm.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (TransformerException ex) {
                            Logger.getLogger(AuthorizationForm.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                });
                this.dispose();
            }
//            ThreadUpdate threadUpdate = new ThreadUpdate(clientForm, inUpdate);
//            threadUpdate.start();
        } catch (UnknownHostException ex) {
            System.err.println("Не могу найти адрес хоста: " + ex.getMessage());
        } catch (IOException ex) {
            System.err.println("Проблемы с сокетом: " + ex.getMessage());
        }
    }

    private void jAuthorizationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAuthorizationActionPerformed
        try {
            Authorization();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AuthorizationForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jAuthorizationActionPerformed

    private void jPasswordMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPasswordMousePressed
        resetJError();
    }//GEN-LAST:event_jPasswordMousePressed

    private void jLoginMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLoginMousePressed
        resetJError();
    }//GEN-LAST:event_jLoginMousePressed

    private void jRegistrationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRegistrationActionPerformed
        try {
            if (socket == null) {
                connectServer();
            }

            document = builder.newDocument();

            Element rootElement = document.createElement("root");
            document.appendChild(rootElement);

            Element element = document.createElement("task");
            element.setTextContent("registration");
            rootElement.appendChild(element);

            element = document.createElement("login");
            element.setTextContent(jLogin.getText());
            rootElement.appendChild(element);

            element = document.createElement("password");
            element.setTextContent(jPassword.getText());
            rootElement.appendChild(element);

            out.writeObject(document);
            out.flush();

            if (!in.readBoolean()) {
                jError.setText("Такой логин уже существует");
            } else {
                jError.setText("Регистрация прошла успешно");
            }
        } catch (IOException ex) {
            System.err.println("Проблемы с сокетом: " + ex.getMessage());
        }
    }//GEN-LAST:event_jRegistrationActionPerformed

    private void jAuthorizationKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jAuthorizationKeyPressed

    }//GEN-LAST:event_jAuthorizationKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AuthorizationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AuthorizationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AuthorizationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AuthorizationForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new AuthorizationForm().setVisible(true);
                } catch (ParserConfigurationException ex) {
                    Logger.getLogger(AuthorizationForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jAuthorization;
    private javax.swing.JLabel jError;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jLogin;
    private javax.swing.JTextField jPassword;
    private javax.swing.JButton jRegistration;
    // End of variables declaration//GEN-END:variables
}
